
AddToolModulePath( "config" )

local doxygen = LoadToolModule( "doxygen" )
-- expose the doxygen function as a top level entity
Doxygen = doxygen.Doxygen

local unit_test = LoadToolModule( "UnitTest" )
AddUnitTest = unit_test.AddUnitTest

BuildConfiguration{ name="release", optimization="heavy", warnings="most" }
BuildConfiguration{ name="build", optimization="optdebug", warnings="most" }
BuildConfiguration{ name="debug", optimization="debug", warnings="most" }
--BuildConfiguration{ name="Win64", opt="optimize", toolset="cross", warnings="most" }
DefaultConfiguration( "build" )

local s = sys.system()
if s == "Linux" then
	X11 = assert( ExternalLibrary( "x11" ), "X11 library required" )
	PNG = assert( ExternalLibrary( "libpng" ), "png library required" )
	EXR = assert( ExternalLibrary( "OpenEXR" ), "OpenEXR library required" )
	FREETYPE = assert( ExternalLibrary( "freetype2" ), "Freetype library required" )
	FONTCONFIG = assert( ExternalLibrary( "fontconfig" ), "fontconfig library required" )
	GL = assert( ExternalLibrary( "gl" ), "OpenGL library required" )
	Z = assert( ExternalLibrary( "z" ), "zlib library required" )
elseif s == "Darwin" then
	PNG = assert( ExternalLibrary( "libpng" ), "png library required" )
	EXR = assert( ExternalLibrary( "OpenEXR" ), "OpenEXR library required" )
	ILMBASE = assert( ExternalLibrary( "IlmBase" ), "IlmBase library required" )
	GL = assert( ExternalLibrary( "OpenGL" ), "OpenGL library required" )
	Z = assert( ExternalLibrary( "zlib" ), "zlib library required" )
end

Doxygen( "docs", "docs/doxyfile" )

EnableLanguages( "c++11" )
SetOption( "threads", "on" )
Include( "libs" )

libs = SubDir( "libs" )
apps = SubDir( "apps" )
tests = SubDir( "tests" )

