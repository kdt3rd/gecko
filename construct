assert( check_version and check_version( "1.0" ), "Please upgrade constructor" );

add_module_path "config"

Doxygen = require "doxygen"
AddUnitTest, AddSlowUnitTest = table.unpack( require "UnitTest" )
require "MingWw64"

--define_platform "vfx_15"
--  library "qt" ">=4.8.5, <4.9.0"
--  library "opencolorio" "==1.0.9"
--define_platform "vfx_16"
--  library "qt" "==5.6.1"
--  library "opencolorio" "==1.0.9"
--  language "c++11"
--define_platform "vfx_17"
--  library "qt" "==5.6.1"
--  library "opencolorio" "==1.0.9"
--  language "c++11"
--define_platform "vfx_18"
--  library "qt" ">=5.6.1"
--  library "opencolorio" "==1.0.9"
--  language "c++14"
--default_platform "vfx_17"

configuration "release"
  optimization "heavy"
  vectorize "SSE4"
  warnings "most"
  defines "NDEBUG"

if toolset_active( "mingw-w64-archiver" ) and toolset_active( "mingw-w64-gcc" ) then

	configuration "win64cross-release"
      system "Windows"
	  toolset "mingw-w64-archiver"
      toolset "mingw-w64-gcc"
	  skip_on_error( true )
      optimization "optdebug"
      vectorize "SSE4"
      warnings "most"
	  style "app"
      --os_version "vista"
      defines { "NDEBUG", "_USE_MATH_DEFINES", "WINVER=0x0600" }

end

configuration "build"
  optimization "optdebug"
  vectorize "SSE4"
  warnings "most"

configuration "debug"
  optimization "debug"
  vectorize "SSE4"
  warnings "most"

--configuration "vfx17"
--  optimization "optdebug"
--  warnings "most"
--  use_platform "vfx_17"

default_configuration "build"

-- VFX platform 2018 is c++14, so use that...
language "c++14"
--language "c++11"
threads "on"

Doxygen( "docs", "docs/doxyfile" )

includes "libs"

l = subdir "libs"
subdir "apps"
subdir "tests"
