

BuildConfiguration{ name="release", optimization="heavy" }
BuildConfiguration{ name="build", optimization="optdebug" }
BuildConfiguration{ name="debug", optimization="debug" }
--BuildConfiguration{ name="Win64", opt="optimize", toolset="cross" }
DefaultConfiguration( "build" )

local doxygen = file.find_exe( "doxygen" )
if doxygen then

    AddTool{ tag="doxygen",
             name="doxygen",
             exe=doxygen,
             options={
             },
             option_defaults={
             },
             cmd={file.find_exe( "env" ),
                  "DOX_OUTPUT_DIR=$out",
                  "DOX_SOURCE_DIR=$srcdir",
                  "$exe", "$in"},
             description="DOC $out",
    }

	function Doxygen( name, config )
		local i = Item.new( name )
		i:forceTool( "", "doxygen" )
		return i
	end

else
	print( "No doxygen found" );
end

if sys.system() == "Linux" then
	X11 = assert( ExternalLibrary( "x11" ), "X11 library required" )
	PNG = assert( ExternalLibrary( "libpng" ), "png library required" )
	FREETYPE = assert( ExternalLibrary( "freetype2" ), "Freetype library required" )
	FONTCONFIG = assert( ExternalLibrary( "fontconfig" ), "fontconfig library required" )
	GL = assert( ExternalLibrary( "gl" ), "OpenGL library required" )
	Z = assert( ExternalLibrary( "z" ), "zlib library required" )
end

EnableLanguages( "c++11" )
SetOption( "threads", "on" )
Include( "libs" )

libs = SubDir( "libs" )
apps = SubDir( "apps" )

