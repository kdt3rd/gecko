-- this doesn't catch the cross compiling case
-- but the script library will just be smaller
-- and with some missing symbols when someone
-- tries to use it
if sys.system() ~= "Darwin" and sys.system() ~= "Linux" then
	error( "NYI: Font support for system " .. sys.sytem() );
end

lib = library "script"
  source{
	"font.cpp",
	"font_dpi_cache.cpp",
	"font_manager.cpp"
  }
  optional_source{
	  system="Darwin";
	  source={
		  "cocoa/font_manager.mm",
		  "cocoa/font.mm",
		  "darwin.cpp",
	  };
	  libs={"AppKit", "Cocoa"};
  }
  optional_source{
	  system="Linux";
	  source={
		  "fontconfig/font_manager.cpp",
		  "freetype2/font.cpp",
		  "linux.cpp",
	  };
	  libs={"freetype2", "fontconfig"};
  }
  optional_source{
	  system="Windows";
	  source={
		  "mswin/font_manager.cpp",
		  "freetype2/font.cpp",
		  "mswin.cpp",
	  };
	  libs={"freetype2", "harfbuzz", "freetype", "graphite2", "bzip2", "gdi32"};
  }
  -- can also call optional_source all at once as on giant table
  libs{ "base", "utf" }
  -- can also call system_libs like:
  -- system_libs( "Darwin", "AppKit", "Cocoa" )
  -- not sure which is preferred
  -- or as one big table
